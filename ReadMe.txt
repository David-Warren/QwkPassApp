Example Program(s) Version 1.0 11/29/2017

QwkPass by Jay Bajaj, David Warren, Brendan Hart
CMPE 195B Senior Project

CODE REPO LINK: https://github.com/jbajaj12/QwkPassApp.git

References:
https://stackoverflow.com/questions/31540375/how-to-toast-message-in-swift/38203364
https://firebase.google.com/docs/ios/setup
https://stripe.com/docs/mobile/ios
https://www.bart.gov
http://www.caltrain.com
http://www.vta.org
http://youtube.com
https://fonts.google.com/specimen/Nunito

=====================================================================================================================================================================

SETUP AND BUILD INSTRUCTIONS FOR QWKPASS IOS APPLICATION :

For Mac based Computer only please follow the below instruction

Xcode 9.1 Install:
1. On a Mac machine preferable running macOS High Sierra, launch the AppStore using spotlight in the menu bar or click command+space and search App Store
2. Search for Xcode in the App Store to download one will require an Apple ID which can be created on apple.com https://appleid.apple.com/account#!&page=create
3. Once you have downloaded Xcode 9.1 it should be in your application folder in the finder
4. Launch Xcode 9.1
5. Make sure to install all Xcode components after launching Xcode

QwkPass App on Xcode Setup:
1. Once you see the Welcome to Xcode screen, click on Clone an existing project
2. Enter the repo link into Enter Repository URL: https://github.com/jbajaj12/QwkPassApp.git then click enter
3. Once you do that you can Save the file in any directory as browser window is shown click clone
4. Let Xcode index the project, once indexing has finished make sure the simulation device is set to iPhone X next to the QwkPassApp Icon on the top left
5. Click play button on top left of the window, the project should start building ignore yellow warnings
6. Build should succeed and launch the app on simulation on another screen

If any errors occur run this:

QwkPass App Pods installation:
1. As this app using CocoaPods frameworks for Firebase and Stripe connection we need to install the pods
2. Launch terminal from spotlight using command+space search for Terminal
3. Change your directory to the one where the QwkPassApp project is located, run "sudo gem install cocoapods"
4. Then run pod install
5. The app should be configured with Xcode and should allow the app to run successfully with all backend frameworks


=====================================================================================================================================================================

CODE STRUCTURE FOR QWKPASS IOS APPLICATION:

The mobile application for this project was created using Swift 3.2 and Xcode 9.1 on macOS High Sierra.
In this section of the read me, I will describe each of the swift files created by our group and explain how it works with the whole system.

SplashScreenViewController.swift
- The launch screen before actual app is shown for loading purposes

Main.Storyboard
- contains all the screens for this application, which include all the UI elements, this is where design changes are made and new screens are created
- this is also where our group connected the screens using segues which allow one view controller to go to the next view controller
- basically shows the whole user interface of the app before actually simulating on phone

AppDelegate
- this is basically the header file where the Firebase connection is configured and Stripe Key is set to link to Stripe account
- Facebook SDK was also implemented however did not end up on the application as it was not required

LaunchViewController
- Login Page
- Has text fields for Email and Password and button to Login or Sign Up
- Login if account already created or Sign Up to create new account
- All user data is stored on a Realtime Firebase Database and password data is encrypted

RegisterViewController
- Allows user to register for an account and store their information on Firebase
- Email, Username, Password, and Confirm Password text fields are taken
- Next button is used to move onto credit card information screen

RBVC
- This view controller is for taking in user credit card information in order to create a Stripe token
- Once user enters credit card number, expiry date, security code user can register and a stripe token is generated for payment


After logging in user can use the Tab Bar controller on the Bottom of the app to navigate throughout the app, which consists of:

TicketsViewController
- After user logs in using valid credentials, the tickets view shows a QR code that is used as a pass for transit payment and travel
- This QR code is unique to each user as it is dependent on the user token which is generated by Firebase

ScheduleViewController
- Using the tab bar controller one can navigate to Schedule which shows the Bart, Caltrain, and VTA schedule for information
- This is controlled through a UISegmentedControl

MapsViewController
- Similarly using the tab bar controller one can navigate to Maps which shows the Bart, Caltrain, and VTA map for information
- This is controlled through a UISegmentedControl


AccountViewController
- Is where the user can manage their personal information by clicking on Manage User Info which takes you to ManageUserInfoViewController
- User can also sign out here using UIButton

ManageUserInfoViewController
- User can edit email, username, and password which is all reflected on Firebase after clicking Save UIButton

Assets.xcassets folder
- Has all the images used in our project

Pods
- are frameworks required for connection to Firebase database and Stripe Payment System


=====================================================================================================================================================================
SETUP AND BUILD INSTRUCTIONS FOR QWKPASS PYTHON TERMINAL USING RASPBERRY PI :

For Windows based Computer please follow the below instructions if running on a MacOS skip to PIP Python Module Install

Python 3.6 Install:

The script was written in python 3.6, which is available for free download at the following website: https://www.python.org/downloads/. Click the yellow box near the top that says “Download Python 3.6” and a file will be downloaded called python-3.6.1.exe. 
1. Run the .exe to install the Python software.
2. Check the box on the bottom that says “Add Python 3.6.1 to PATH” and Click “Install Now”
3. Click “yes” to allow User Account Control
4. Once you see “Setup was Successful” click on “Close”
5. Python 3.6.1 is now installed on your machine

(Note: Once Python is installed, a few modules and packages need to be installed on the machine for the script to run without errors.)

PIP Python Module Installer:

MacOS:

Open a terminal and type the following commands:
$ curl -O http://python-distribute.org/distribute_setup.py
$ python distribute_setup.py
$ curl -O https://raw.github.com/pypa/pip/master/contrib/get-pip.py
$ python get-pip.py

Requests Module:
pip install requests

SimpleJSON Module Install:
pip install simplejson

Stripe Module Install:
pip install --upgrade stripe

Firebase Module Install:
pip install python-firebase

Firebase-admin Install:
pip install firebase-admin


Windows:

To install these packages, we will need to install pip for python first:
1. Click on the link and follow the video to install pip: https://www.youtube.com/watch?v=AVCcFyYynQY 
2. Now that the pip python installer is downloaded and installed we will need to install three modules to get the scrip to run without any errors. Please follow the    instructions below to install the remaining modules and packages.

Requests Module:
To download the requests module, follow the instructions below:
1. Open the command prompt
2. Type the following: pip install requests
3. The requests module show download and install through the command prompt

SimpleJSON Module Install:
To download the JSON module, follow the instructions below:
1. Open the command prompt
2. Type the following: pip install simplejson
3. The requests module show download and install through the command prompt

Stripe Module Install:
To download the Stripe API module, follow the instructions below:
1. Open the command prompt
2. Type the following: pip install --upgrade stripe
3. The requests module show download and install through the command prompt

Firebase Module Install:
To download the Firebase API module, follow the instructions below:
1. Open the command prompt
2. Type the following: pip install python-firebase
3. The requests module show download and install through the command prompt

Firebase-admin Install:
To download the Firebase Admin module, follow the instructions below:
1. Open the command prompt
2. Type the following: pip install firebase-admin
3. The requests module show download and install through the command prompt


Python and Modules are now fully installed on the machine and ready for the script to run without any errors.

=====================================================================================================================================================================

Example Code can be obtained at:

Web site: https://github.com/jbajaj12/QwkPassApp
E-mail: Brendan.hart@sjsu.edu

=====================================================================================================================================================================
CODE STRUCTURE FOR QWKPASS PYTHON SCRIPT:

The python code is integrated with Firebase and Stripe using the provide APIs from the companies. For the BART and CalTrans terminals there are two different scripts that will need to be ran in order for the project to function correctly. Run the Start_Terminal_Code.py first and scan the QR code from the Qwkpass iOS application. This will update the firebase with a starting location. Next run the End_Terminal_code.py and scan the QR code from the application. This will update the users profile in the database witht their ending location and make a charge to their credit card using Stripe.

=====================================================================================================================================================================
QWKPASS WEBSITE 

Link to QwkPass Wesbite github repo: https://github.com/jbajaj12/QwkPass

Link to Website: qwkpass.paperplane.io

The QwkPass website was built as a supplement to the main project. It currently serves as simply an information website. The website was constructed from scratch using HTML, CSS, JS and Firebase integration. No installation or further steps are required beyond simply copying the Linke to Website into the URL. 

The structure of the code consisted of writting HTML files for each page of the website and using a seperate CSS file that would be linked through the HTML code. The CSS file acted as the styling page while the HTML file acted as the site content. JS code would be incorporated into the HTML for specific functions such as the "hero" header that is animated on the home page. Firebase was integrated on the login page. 
